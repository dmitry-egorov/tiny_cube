---------TODO---------
- stop at follower's width
- introduce point types
- implement switching...

+ refactor to exclusive points

-------THOUGHTS-------
- jump: always starts forward movement and airborne
- stop when walking into a wall (forward point out of bounds and check heights)
- start airborne when falling (backward point out of path)
- switch to the highest level by back and forward point when airborne
- adjust location whe back or forward is out (can introduce separate smothing radius)



        _______

        _______
_______-

if (higher)
{
	stop
}
if (lower)
{
	switch and go
}

switch to the highest level below the subject

watch the path only in the direction of movement

switch and stop are separate mechanics



stop watches a point further
switch watches a point below???

stop when walking to a path without connection
stop when walking to a path with connection which is higher (not airborne)

there's a problem when landing on a side





segment contains points
points are exclusive to a segment
points contain information about connected segments
point can be restrictive or free

transition can be made only when a path is below or at the height of the subject


free, restricted

free: fall when point at the side opposite to the movement is out of the path
restrictive: stop and set to point when outside the point

restricted to free: switch only when at or above the path with the central point

free to restricted: falling down, switch when falling

free to free




